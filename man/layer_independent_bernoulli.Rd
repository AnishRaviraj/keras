% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layers_tfp.R
\name{layer_independent_bernoulli}
\alias{layer_independent_bernoulli}
\title{An Independent-Bernoulli Keras layer from \code{prod(event_shape)} params}
\usage{
layer_independent_bernoulli(object, event_shape,
  convert_to_tensor_fn = NULL, sample_dtype = NULL,
  validate_args = NULL, batch_input_shape = NULL, input_shape = NULL,
  batch_size = NULL, dtype = NULL, name = NULL, trainable = NULL,
  weights = NULL)
}
\arguments{
\item{object}{Model or layer object}

\item{event_shape}{Scalar integer representing the size of single draw from this distribution.}

\item{convert_to_tensor_fn}{A callable that takes a \code{tfd$Distribution} instance and returns a
\code{tf$Tensor}-like object. Default value: \code{tfd$Distribution$sample}.}

\item{sample_dtype}{\code{dtype} of samples produced by this distribution.
Default value: \code{NULL} (i.e., previous layer's \code{dtype}).}

\item{validate_args}{Logical, default \code{FALSE}. When \code{TRUE} distribution parameters are checked
for validity despite possibly degrading runtime performance. When \code{FALSE} invalid inputs may
silently render incorrect outputs. Default value: \code{FALSE}.}

\item{batch_input_shape}{Shapes, including the batch size. For instance,
\code{batch_input_shape=c(10, 32)} indicates that the expected input will be
batches of 10 32-dimensional vectors. \code{batch_input_shape=list(NULL, 32)}
indicates batches of an arbitrary number of 32-dimensional vectors.}

\item{input_shape}{Dimensionality of the input (integer) not including the
samples axis. This argument is required when using this layer as the first
layer in a model.}

\item{batch_size}{Fixed batch size for layer}

\item{dtype}{The data type expected by the input, as a string (\code{float32},
\code{float64}, \code{int32}...)}

\item{name}{An optional name string for the layer. Should be unique in a
model (do not reuse the same name twice). It will be autogenerated if it
isn't provided.}

\item{trainable}{Whether the layer weights will be updated during training.}

\item{weights}{Initial weights for layer.}
}
\description{
An Independent-Bernoulli Keras layer from \code{prod(event_shape)} params
}
\seealso{
Other Probabilistic layers (require TensorFlow probability): \code{\link{layer_kl_divergence_add_loss}},
  \code{\link{layer_multivariate_normal_tril}}
}
\concept{Probabilistic layers (require TensorFlow probability)}
